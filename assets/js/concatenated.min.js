document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("menu-button"),e=document.getElementById("navigation-items");t.addEventListener("click",(()=>{document.body.classList.toggle("open-menu")})),document.addEventListener("click",(n=>{t.contains(n.target)||e.contains(n.target)||document.body.classList.contains("open-menu")&&document.body.classList.remove("open-menu")}))}));class VideoPlayer extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.hasInteracted=!1,this.hideControlsTimeout=null,this.isSeeking=!1,this.wasPlaying=!1,this.observer=null,this.fadeoutTimeout=null}connectedCallback(){const t="ontouchstart"in window;this.render(t),this.video=this.shadowRoot.querySelector("video"),this.videoContainer=this,t||(this.playButton=this.shadowRoot.querySelector("#playButton"),this.muteButton=this.shadowRoot.querySelector("#muteButton"),this.fullscreenButton=this.shadowRoot.querySelector("#fullscreenButton"),this.videoOverlay=this.shadowRoot.querySelector(".video-overlay"),this.controls=this.shadowRoot.querySelector(".controls"),this.progressBar=this.shadowRoot.querySelector(".progress-bar"),this.progressBarFill=this.shadowRoot.querySelector(".progress-bar-fill")),this.video?(t||(this.updateMuteButtonIcon(!0),this.playButton?.addEventListener("click",(()=>this.togglePlay())),this.videoOverlay?.addEventListener("click",(()=>this.togglePlay())),this.muteButton?.addEventListener("click",(()=>this.toggleMute())),this.fullscreenButton?.addEventListener("click",(()=>this.toggleFullscreen())),this.video.addEventListener("timeupdate",(()=>this.updateProgressBar())),this.progressBar?.addEventListener("mousedown",(t=>this.startSeeking(t))),this.progressBar?.addEventListener("mousemove",(t=>this.seeking(t))),this.progressBar?.addEventListener("mouseup",(()=>this.endSeeking())),this.progressBar?.addEventListener("mouseleave",(()=>this.endSeeking())),this.addEventListener("mousemove",(()=>this.showControls())),this.addEventListener("mouseleave",(()=>this.hideControls()))),document.addEventListener("visibilitychange",(()=>this.handleVisibilityChange())),this.video.muted=!0,this.hasAttribute("autoplay")?(this.video.play().catch((()=>{t||this.classList.add("paused")})),this.updatePlayButtonIcon(!1)):(this.classList.add("paused"),this.updatePlayButtonIcon(!0)),this.video.loop=this.hasAttribute("loop")):console.error("Required video element not found"),this.setupIntersectionObserver(),this.volumeBars=this.shadowRoot.querySelector("#volumeBars"),this.volumeBars?.addEventListener("click",(t=>this.handleVolumeBarClick(t))),this.updateVolumeBars(this.video.volume),this.showControls(),document.addEventListener("fullscreenchange",(()=>this.handleFullscreenChange()))}render(t=!1){const e=this.getAttribute("video-url"),n=this.getAttribute("video-poster"),o=this.getAttribute("video-title"),i=this.getAttribute("video-description"),s=this.hasAttribute("muted"),a=this.hasAttribute("playsinline"),r=this.hasAttribute("autoplay"),l=this.hasAttribute("loop");this.shadowRoot.innerHTML=`\n            <style>\n                :host {\n                    display: flex;\n                    position: relative;\n                    justify-content: center;\n                    align-items: center;\n                    background-color: black;\n                    overflow: hidden;\n                    --theme-color: var(--video-theme-color, currentColor);\n                    text-align: left;\n                    container-type: inline-size;\n                }\n\n                :host(:fullscreen) {\n                    border-radius: 0 !important;\n                }\n\n                .video {\n                    pointer-events: ${t?"auto":"none"};\n                    z-index: 10;\n                }\n                .video-info {\n                    position: static;\n                    padding: 0 24px;\n                    color: white;\n                    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n                    margin-bottom: 12px;\n                }\n                \n                .video-info h2 {\n                    margin: 0 0 4px;\n                    font-size: 22px;\n                    font-weight: 700;\n                }\n                \n                .video-info p {\n                    margin: 0;\n                    font-size: 14px;\n                    line-height: 18px;\n                    opacity: 0.74;\n                }\n\n                .video-info h2,\n                .video-info p{\n                    overflow: hidden;\n                    display: -webkit-box;\n                    -webkit-line-clamp: 1; /* number of lines to show */\n                    line-clamp: 1; \n                    -webkit-box-orient: vertical;\n                }\n                \n                :host(.paused) .video-info {\n                    opacity: 1;\n                }\n\n                ${t?"":"\n                    .video-overlay {\n                        position: absolute;\n                        top: -1px;\n                        right: -1px;\n                        bottom: -1px;\n                        left: -1px;\n                        z-index: 20;\n                        opacity: 0;\n                        background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.6) 80%);\n                        cursor: pointer;\n                        transition: opacity 200ms linear;\n                    }\n                    .video-overlay:hover{\n                        opacity: 0.4;\n                    }\n                    :host(.paused) .video-overlay{\n                        opacity: 1;\n                    }\n                    .video {\n                        pointer-events: none;\n                        z-index: 10;\n                        width: 100%;\n                        height: auto;\n                    }\n                    .controls {\n                        position: absolute;\n                        bottom: 0;\n                        left: 0;\n                        right: 0;\n                        z-index: 40;\n                        display: flex;\n                        flex-direction: column;\n                        pointer-events: auto;\n                        opacity: 1;\n                        transition: opacity 0.3s ease;\n                        background: linear-gradient(to top, rgba(0,0,0,0.8) 0%, transparent 100%);\n                        padding-bottom: 8px;\n                    }\n                    .play-info-container {\n                        display: flex;\n                        align-items: center;\n                        gap: 16px;\n                        opacity: 1;\n                        pointer-events: none;\n                        transition: opacity 0.3s ease;\n                    }\n                    .play-info-container:has(.video-info) {\n                        justify-content: flex-start;\n                        margin-left: 24px;\n                    }\n                    .play-info-container:not(:has(.video-info)) {\n                        justify-content: center;\n                    }\n                    .left-controls {\n                        display: flex;\n                        align-items: center;\n                        gap: 8px;\n                    }\n                    .play-button {\n                        position: static;\n                        display: flex;\n                        cursor: pointer;\n                    }\n                    .play-button-inner {\n                        display: flex;\n                        padding: 0 14px 0 24px;\n                        height: 100%;\n                        align-items: center;\n                        justify-content: center;\n                        opacity: 0.85;\n                    }\n                    .progress-bar-container {\n                        grid-row: 1;\n                        height: 24px;\n                        display: flex;\n                        align-items: center;\n                    }\n                    .progress-bar {\n                        width: 100%;\n                        height: 4px;\n                        background: rgba(255, 255, 255, 0.2);\n                        position: relative;\n                        cursor: pointer;\n                        margin: 10px 0;\n                    }\n                    .progress-bar:hover {\n                        height: 8px;\n                        margin-top: 8px;\n                        margin-bottom: 8px;\n                    }\n                    .progress-bar-fill {\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        height: 100%;\n                        background: var(--theme-color);\n                        width: 0%;\n                        transition: width 0.1s linear;\n                    }\n                    .seek-handle {\n                        position: absolute;\n                        top: 50%;\n                        transform: translate(-50%, -50%);\n                        width: 12px;\n                        height: 12px;\n                        background: var(--theme-color);\n                        border-radius: 50%;\n                        opacity: 0;\n                        transition: opacity 0.2s;\n                        pointer-events: none;\n                    }\n                    .progress-bar:hover .seek-handle {\n                        opacity: 1;\n                    }\n                    .play-button svg {\n                        width: 24px;\n                        height: 24px;\n                        fill: white;\n                        stroke: transparent;\n                    }\n                    button {\n                        background-color: transparent;\n                        border: none;\n                        color: white;\n                        padding-top: 16px;\n                        padding-bottom: 12px;\n                        padding-left: 16px;\n                        padding-right: 16px;\n                        cursor: pointer;\n                        border-radius: 4px;\n                        transition: background-color 0.3s, transform 0.3s;\n                    }\n                    button:hover {\n                        transform: scale(1.05);\n                    }\n                    button:active {\n                        transform: scale(0.95);\n                    }\n                    .icon {\n                        width: 24px;\n                        height: 24px;\n                        stroke: var(--theme-color);\n                        stroke-width: 1.5px;\n                    }\n                    .sr-only {\n                        position: absolute;\n                        width: 1px;\n                        height: 1px;\n                        padding: 0;\n                        margin: -1px;\n                        overflow: hidden;\n                        clip: rect(0, 0, 0, 0);\n                        white-space: nowrap;\n                        border: 0;\n                    }\n                    .button-group {\n                        display: flex;\n                        align-items: center;\n                        gap: 0;\n                    }   \n\n                    /* Hide controls by default */\n                    .controls {\n                        opacity: 0;\n                    }\n\n                    /* Only show controls on hover if user has interacted */\n                    :host([data-has-interacted]:hover) .controls{\n                        opacity: 1;\n                    }\n\n                    /* Only show controls when paused if user has interacted */\n                    :host(.paused[data-has-interacted]) .controls {\n                        opacity: 1;\n                    }\n\n                    /* Remove the general hover rule that was showing controls */\n                    :host(:hover) .controls {\n                        opacity: 1;\n                    }\n\n                    /* Show controls by default on touch devices */\n                    @media (hover: none) {\n                        .controls {\n                            opacity: var(--controls-opacity, 0);\n                        }\n                    }\n\n                    /* Show controls on hover for non-touch devices */\n                    :host(:hover) .controls {\n                        opacity: var(--controls-opacity,0);\n                    }\n\n                    /* Show controls when paused AND user has interacted */\n                    :host(.paused[data-has-interacted]) .controls {\n                        opacity: 1;\n                    }\n\n                    .buttons-container{\n                        display: flex;\n                        justify-content: space-between;\n                    }\n\n                    .volume-bars {\n                        display: flex;\n                        align-items: flex-end;\n                        justify-content: space-between;\n                        gap: 0;\n                        height: 18px;\n                        padding: 0;\n                        width: calc(4px * 5);\n                        cursor: pointer;\n                    }\n\n                    .volume-bar {\n                        width: 4px;\n                        opacity: 0.3;\n                        transition: opacity 0.2s, height 0.2s;\n                        cursor: pointer;\n                        position: relative;\n                        height: 20px;\n                    }\n\n                    .volume-bar:after{\n                        content: '';\n                        position: absolute;\n                        background: white;\n                        bottom: 0;\n                        left: 50%;\n                        transform: translateX(-50%);\n                        width: 2px;\n                        height: 100%;\n                    }\n\n                    .volume-bar.active {\n                        opacity: 1;\n                    }\n\n                    .volume-bar:nth-child(1):after { height: 3px; }\n                    .volume-bar:nth-child(2):after { height: 7px; }\n                    .volume-bar:nth-child(3):after { height: 11px; }\n                    .volume-bar:nth-child(4):after { height: 15px; }\n                    .volume-bar:nth-child(5):after { height: 19px; }\n\n                    /* Initial state styles */\n                    :host(.paused:not([data-has-interacted])) .controls {\n                        opacity: 1;\n                    }\n\n                    /* Center play button in initial state */\n                    :host(.paused:not([data-has-interacted])) .controls-top {\n                        display: grid;\n                        place-items: center;\n                        height: 100%;\n                    }\n\n                    :host(.paused:not([data-has-interacted])) .play-info-container {\n                        margin: 0;\n                        justify-self: center;\n                        align-self: center;\n                    }\n\n                    /* Restore bottom controls after interaction */\n                    :host([data-has-interacted]) .controls-bottom {\n                        position: relative;\n                        visibility: visible;\n                    }\n\n                    /* Small screen adjustments */\n                    @container (max-width: 640px) {\n                        .controls {\n                            grid-template-rows: 1fr auto auto;\n                        }\n                        \n                        .controls-bottom {\n                            padding: 0 8px 8px;\n                            gap: 4px;\n                        }\n                    }\n\n                    /* Center play button in initial state */\n                    :host(.paused:not([data-has-interacted])) .controls-top {\n                        display: grid;\n                        place-items: center;\n                        height: 100%;\n                    }\n\n                    :host(.paused:not([data-has-interacted])) .play-info-container {\n                        margin: 0;\n                        justify-self: center;\n                        align-self: center;\n                    }\n\n                    /* Remove any potential offsets in initial state */\n                    :host(.paused:not([data-has-interacted])) .controls-top,\n                    :host(.paused:not([data-has-interacted])) .play-info-container:not(:has(.video-info)) {\n                        padding: 0;\n                    }\n\n                    .play-info-container {\n                        opacity: 1;\n                        transition: opacity 0.3s ease;\n                    }\n\n                    :host(:hover) .play-info-container {\n                        opacity: 1;\n                    }\n\n                    .time-display {\n                        color: white;\n                        font-size: 14px;\n                        padding: 2px 12px 0;\n                        opacity: 0.9;\n                        font-variant-numeric: tabular-nums;\n                        display: flex;\n                        align-items: center;\n                    }\n\n                    .right-controls {\n                        display: flex;\n                        align-items: center;\n                    }\n                "}\n            </style>\n            ${t?"":'<div class="video-overlay"></div>'}\n            <video \n                id="video" \n                class="video" \n                width="100%" \n                ${s?"muted":""} \n                ${a?"playsinline":""} \n                ${t?"controls":""}\n                ${n?`poster="${n}"`:""}\n                ${r?"autoplay":""}\n                ${l?"loop":""}\n            >\n                <source src="${e}" type="video/mp4">\n                Your browser does not support HTML5 video.\n            </video>\n            ${t?"":`\n                <div class="controls">\n                    <div class="controls-bottom">\n                        ${o||i?`\n                            <div class="video-info">\n                                ${o?`<h2>${o}</h2>`:""}\n                                ${i?`<p>${i}</p>`:""}\n                            </div>\n                        `:""}\n                        <div class="progress-bar-container">\n                            <div class="progress-bar">\n                                <div class="progress-bar-fill"></div>\n                                <div class="seek-handle"></div>\n                            </div>\n                        </div>\n                        <div class="buttons-container">\n                            <div class="left-controls">\n                                <div class="button-group">\n                                    <div id="playButton" class="play-button">\n                                        <div class="play-button-inner">\n                                            <svg width="14" height="16" viewBox="0 0 14 16" stroke="currentColor" xmlns="http://www.w3.org/2000/svg">\n                                                <path d="M0.5 14.3507V1.64929C0.5 0.871991 1.34797 0.391878 2.0145 0.791793L12.599 7.14251C13.2464 7.53091 13.2464 8.46909 12.599 8.85749L2.0145 15.2082C1.34797 15.6081 0.5 15.128 0.5 14.3507Z" stroke-linecap="round" stroke-linejoin="round"/>\n                                            </svg>\n                                        </div>\n                                        <span class="sr-only">Play</span>\n                                    </div>\n                                    <button id="muteButton">\n                                        <span class="sr-only">Mute</span>\n                                    </button>\n                                    <div id="volumeBars" class="volume-bars">\n                                        <div class="volume-bar" data-volume="0.2"></div>\n                                        <div class="volume-bar" data-volume="0.4"></div>\n                                        <div class="volume-bar" data-volume="0.6"></div>\n                                        <div class="volume-bar" data-volume="0.8"></div>\n                                        <div class="volume-bar" data-volume="1.0"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="right-controls">\n                                <div class="time-display">0:00 / 0:00</div>\n                                <button id="fullscreenButton">\n                                    <svg class="icon" id="fullscreenIcon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                                        <path d="M8 3H5a2 2 0 0 0-2 2v3"/><path d="M21 8V5a2 2 0 0 0-2-2h-3"/><path d="M3 16v3a2 2 0 0 0 2 2h3"/><path d="M16 21h3a2 2 0 0 0 2-2v-3"/>\n                                    </svg>\n                                    <span class="sr-only">Fullscreen</span>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `}\n        `}togglePlay(){if(this.video.paused){this.hasAttribute("autoplay")||(this.video.muted=!1,this.updateMuteButtonIcon(!1)),this.video.play(),this.classList.remove("paused"),this.updatePlayButtonIcon(!1),this.hasInteracted=!0,this.setAttribute("data-has-interacted",""),this.style.setProperty("--controls-opacity","1");const t=this.shadowRoot.querySelector(".controls");t.style.opacity="1",t.style.bottom="0",this.showControls(!0)}else this.video.pause(),this.classList.add("paused"),this.updatePlayButtonIcon(!0),clearTimeout(this.hideControlsTimeout),this.showControls(!0)}updatePlayButtonIcon(t){const e=this.shadowRoot.querySelector("#playButton .play-button-inner");e&&(e.innerHTML=t?'\n            <svg width="14" height="16" viewBox="0 0 14 16" fill="white" xmlns="http://www.w3.org/2000/svg">\n                <path d="M0.5 14.3507V1.64929C0.5 0.871991 1.34797 0.391878 2.0145 0.791793L12.599 7.14251C13.2464 7.53091 13.2464 8.46909 12.599 8.85749L2.0145 15.2082C1.34797 15.6081 0.5 15.128 0.5 14.3507Z"/>\n            </svg>\n        ':'\n            <svg width="14" height="16" viewBox="0 0 14 16" fill="white" xmlns="http://www.w3.org/2000/svg">\n                <rect x="2" y="0.5" width="3" height="15" rx="1"/>\n                <rect x="9" y="0.5" width="3" height="15" rx="1"/>\n            </svg>\n        ')}toggleMute(){this.video.muted=!this.video.muted,this.updateMuteButtonIcon(this.video.muted),this.updateVolumeBars(this.video.muted?0:this.video.volume),this.hasInteracted=!0,this.setAttribute("data-has-interacted",""),this.style.setProperty("--controls-opacity","1"),this.hideControlsIfPlaying(),this.showControls(!0)}updateMuteButtonIcon(t){this.muteButton.innerHTML=t?'\n            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-volume-x icon">\n                <path d="M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"/>\n                <path d="m18 12 4-4"/>\n                <path d="m22 12-4-4"/>\n            </svg>\n            <span class="sr-only">Unmute</span>\n        ':'\n            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-volume-2 icon">\n                <path d="M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"/>\n                <path d="M16 9a5 5 0 0 1 0 6"/>\n                <path d="M19.364 18.364a9 9 0 0 0 0-12.728"/>\n            </svg>\n            <span class="sr-only">Mute</span>\n        '}toggleFullscreen(){document.fullscreenElement?document.exitFullscreen().catch((t=>console.log("Exit fullscreen failed:",t))):this.videoContainer.requestFullscreen().catch((t=>console.log("Fullscreen failed:",t)))}hideControlsIfPlaying(){this.video.paused||this.video.muted||this.controls.classList.add("opacity-0")}showControls(t=!1){clearTimeout(this.hideControlsTimeout),this.controls.style.opacity="1",this.video.paused&&!t||(this.hideControlsTimeout=setTimeout((()=>{this.hideControls()}),2e3))}hideControls(){clearTimeout(this.fadeoutTimeout),this.video.paused||this.isSeeking||(this.controls.style.opacity="0")}handleVisibilityChange(){document.hidden&&this.video.pause()}updateProgressBar(){if(this.video.duration){const t=this.video.currentTime/this.video.duration*100;this.progressBarFill.style.width=`${t}%`;const e=this.shadowRoot.querySelector(".seek-handle");e&&(e.style.left=`${t}%`);const n=this.shadowRoot.querySelector(".time-display");n&&(n.textContent=`${this.formatTime(this.video.currentTime)} / ${this.formatTime(this.video.duration)}`)}}startSeeking(t){this.isSeeking=!0,this.seeking(t),clearTimeout(this.hideControlsTimeout)}seeking(t){if(!this.isSeeking)return;let e;e=t.type.startsWith("touch")?t.touches[0].clientX:t.clientX;const n=this.progressBar.getBoundingClientRect(),o=(e-n.left)/n.width,i=Math.max(0,Math.min(1,o))*this.video.duration;this.progressBarFill.style.width=100*o+"%";const s=this.shadowRoot.querySelector(".seek-handle");s&&(s.style.left=100*o+"%"),this.video.currentTime=i}endSeeking(){this.isSeeking=!1,this.showControls()}setupIntersectionObserver(){this.observer=new IntersectionObserver((t=>{t.forEach((t=>{t.isIntersecting?this.wasPlaying&&this.video.play().catch((()=>{console.log("Auto-resume failed")})):(this.wasPlaying=!this.video.paused,this.video.paused||this.video.pause())}))}),{threshold:.2}),this.observer.observe(this)}disconnectedCallback(){this.observer&&this.observer.disconnect()}handleVolumeBarClick(t){if(t.target.classList.contains("volume-bar")){const e=parseFloat(t.target.dataset.volume);this.video.volume=e,this.video.muted=!1,this.updateMuteButtonIcon(!1),this.updateVolumeBars(e)}}updateVolumeBars(t){this.shadowRoot.querySelectorAll(".volume-bar").forEach((e=>{parseFloat(e.dataset.volume)<=t?e.classList.add("active"):e.classList.remove("active")}))}handleFullscreenChange(){this.fullscreenButton.innerHTML=document.fullscreenElement?'\n            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-minimize icon">\n                <path d="M8 3v3a2 2 0 0 1-2 2H3"/><path d="M21 8h-3a2 2 0 0 1-2-2V3"/><path d="M3 16h3a2 2 0 0 1 2 2v3"/><path d="M16 21v-3a2 2 0 0 1 2-2h3"/>\n            </svg>\n        ':'\n            <svg class="icon" id="fullscreenIcon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                <path d="M8 3H5a2 2 0 0 0-2 2v3"/><path d="M21 8V5a2 2 0 0 0-2-2h-3"/><path d="M3 16v3a2 2 0 0 0 2 2h3"/><path d="M16 21h3a2 2 0 0 0 2-2v-3"/>\n            </svg>\n        ',document.fullscreenElement&&this.showControls(!0)}formatTime(t){return`${Math.floor(t/60)}:${Math.floor(t%60).toString().padStart(2,"0")}`}}function fadeInElements(){let t=0;const e=document.querySelectorAll(".fade-in-element:not(.visible)");!function(t,e=66){if(!t||"function"!=typeof t)return;let n;window.addEventListener("scroll",(function(o){window.clearTimeout(n),n=setTimeout(t,e)}),!1)}((function(){t=0}));const n=new IntersectionObserver((e=>{e.forEach((e=>{if(e.isIntersecting){const o=50*t;((t,e)=>{setTimeout((()=>{t.classList.add("visible"),t.addEventListener("transitionend",(()=>{t.classList.remove("fade-in-element")}))}),e)})(e.target,o),n.unobserve(e.target),t++}}))}));e.forEach((t=>n.observe(t)))}customElements.define("video-player",VideoPlayer),document.addEventListener("DOMContentLoaded",(()=>{document.fonts.ready.then((()=>{document.querySelectorAll(".hidden-until-loaded").forEach((t=>{t.classList.remove("hidden-until-loaded")})),fadeInElements()}))})),document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll(".flip-card").forEach((t=>{t.addEventListener("mouseenter",(()=>{t.classList.add("flipped"),setTimeout((()=>{t.classList.remove("flipped")}),550)}))}))}));const imgObserver=new IntersectionObserver(((t,e)=>{t.forEach((t=>{if(t.isIntersecting){const n=t.target;replaceImageWithVideo(n),setSrcSetAndSizes(n),e.unobserve(n)}}))}),{rootMargin:"0px 0px 200px 0px"}),replaceImageWithVideo=t=>{const e=t.getAttribute("data-video");if(e){const n=document.createElement("video");n.src=e,n.style.objectFit="cover",n.setAttribute("playsinline",""),n.setAttribute("muted",""),n.playbackRate=1,n.addEventListener("ended",(()=>n.pause()));const o=t.closest(".media-wrapper");o&&(t.replaceWith(n),o.addEventListener("transitionend",(()=>{n.play()})))}},setSrcSetAndSizes=t=>{const e=t.clientWidth,n="https://ik.imagekit.io/UltraDAO/wallace/",o=t.src.split("/").pop().split("?")[0],i=t.getAttribute("data-max-width");if(i&&i<=e)t.src=`${n}${o}?tr=q-70`;else{let s=e,a=2*e,r=3*e,l=4*e;i&&(s=Math.min(i,s),a=Math.min(i,a),r=Math.min(i,r),l=Math.min(i,l));const d=`${n}${o}?tr=w-${s},q-70 1x,\n                            ${n}${o}?tr=w-${a},q-70 2x,\n                            ${n}${o}?tr=w-${r},q-70 3x`,c=`(max-width: 400px) ${s}px,\n                        (max-width: 800px) ${a}px,\n                        (max-width: 1200px) ${r}px,\n                        ${l}px`;t.src=`${n}${o}?tr=w-${s},q-70`,t.srcset=d,t.sizes=c}t.classList.add("loaded")},cardObserver=new IntersectionObserver(((t,e)=>{t.forEach((t=>{if(t.isIntersecting){const n=t.target;setBackground(n),e.unobserve(n)}}))}),{rootMargin:"0px 0px 200px 0px"}),setBackground=t=>{const e=t.clientWidth,n=window.devicePixelRatio||1,o=t.style.backgroundImage,[i,s]=o.slice(5,-2).split("?"),a=`${i}?tr=w-${Math.round(e*n)},q-70`;t.style.backgroundImage=`url("${a}")`,t.classList.add("loaded")};document.querySelectorAll(".bg-image-card").forEach((t=>{cardObserver.observe(t)})),document.addEventListener("DOMContentLoaded",(function(){const t=document.querySelectorAll(".zoomable");let e=null,n={};function o(t){const e=n[t];t.style.transition="all 0.3s ease",t.style.top=`${e.top}px`,t.style.left=`${e.left}px`,t.style.width=`${e.width}px`,t.style.height=`${e.height}px`,t.style.transform="none",setTimeout((()=>{t.parentNode.style.height="",t.classList.remove("zoom-fullscreen"),t.style.zIndex="1",t.style.position="",t.style.top="",t.style.left="",t.style.width="",t.style.height="",t.style.transform="",document.body.style.overflow=""}),300)}t.forEach((t=>{t.style.cursor="zoom-in",t.addEventListener("click",(function(){const i=t.classList.contains("zoom-fullscreen"),s=t.getAttribute("data-type");i?(document.body.classList.remove("zoom-active"),o(t),t.style.cursor="zoom-in","video"===s&&(t.muted=!0)):(e||(e=document.createElement("div"),e.className="page-overlay",document.body.appendChild(e)),document.body.classList.add("zoom-active"),function(t){const e=function(t){const e=t.getBoundingClientRect();return{left:e.left,top:e.top,width:e.width,height:e.height}}(t);n[t]=e;const o=.9*window.innerWidth,i=.9*window.innerHeight,{width:s,height:a}=function(t,e){const n=4/3;return t/e>n?t=e*n:e=t/n,{width:t,height:e}}(o,i);requestAnimationFrame((()=>{t.parentNode.style.height=`${e.height}px`,t.classList.add("zoom-fullscreen"),t.style.top="50%",t.style.left="50%",t.style.width=`${s}px`,t.style.height=`${a}px`,t.style.transform="translate(-50%, -50%)"})),t.style.position="fixed",t.style.top=`${e.top}px`,t.style.left=`${e.left}px`,t.style.width=`${e.width}px`,t.style.height=`${e.height}px`,t.style.zIndex="9999"}(t),document.body.style.overflow="hidden",t.style.cursor="zoom-out","video"===s&&(t.muted=!1,t.play()))}))})),e&&e.addEventListener("click",(()=>{document.querySelectorAll(".zoom-fullscreen").forEach((t=>{t.classList.remove("zoom-fullscreen"),o(t)})),document.body.classList.remove("active")}));document.querySelectorAll(".image-gallery").forEach((t=>{const e=t.querySelectorAll("img");let n=0,o=null;function i(t){e.forEach(((e,n)=>{e.style.display=n===t?"block":"none"}))}o=setInterval((function(){n=(n+1)%e.length,i(n)}),2e3),i(n)}))}));